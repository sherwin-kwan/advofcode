// Sort the array
// Iterate through the array and measure the difference between that adapter and the previous one
// Have a separate counter for the number of 1-jolt, 2-jolt, and 3-jolt differences
// PART 2: The problem is a Fibonacci-like problem. The total number of adapter sequences to n you can build is the sum of the number of sequences
// to n-1, n-2, and n-3.
// Build an array from 0 to n, initialize the 0th entry to 1. All subsequent values are generated by a condition:
// IF we have an adapter for this joltage, sum the values for n-1, n-2, and n-3.
// If we have no adapter for this joltage, enter 0.

const { getData } = require("./helpers");

const parseData = async () => {
  const rawData = await getData("./10-input.txt", "\n", false);
  const data = rawData.map((str) => Number(str)).sort((a, b) => a - b)
  data.unshift(0);
  return data;
};

const countJoltDifferences = async () => {
  const data = await parseData();
  const counter = [0, 0, 0, 1]; // Extra 3-jolt difference between the top adapter and the actual joltage of the airplane
  data.forEach((val, ind) => {
    if (ind) counter[val - data[ind-1]]++;
  });
  console.log(
    counter,
    `There were ${counter[1]} 1-jolt differences and ${counter[3]} 3-jolt differences, for a product of ${counter[1] * counter[3]}`);
};

const findDistinctSequences = async() => {
  const data = await parseData(); 
  const sequencesToN = [1];
  sequencesToN[1] = (data.includes(1)) ? 1 : 0;
  sequencesToN[2] = (data.includes(2)) ? sequencesToN[0] + sequencesToN[1] : 0;
  for (let i = 3; i <= data[data.length - 1]; i++) {
    if (data.includes(i)) {
      sequencesToN[i] = sequencesToN[i - 3] + sequencesToN[i - 2] + sequencesToN[i - 1];
    } else sequencesToN[i] = 0;
  };
  console.log(`The total number of distinct adapter combinations is ${sequencesToN[sequencesToN.length - 1]}`);
} 

countJoltDifferences(); // Output: There were 66 1-jolt differences and 29 3-jolt differences, for a product of 1914
findDistinctSequences(); // The total number of distinct adapter combinations is 9256148959232